#BlueJ class context
comment0.target=Pile3Test
comment0.text=\n\ Classe-test\ Pile3Test.\n\ \n\ @author\ (votre\ nom)\n\ @version\ (un\ num\u00C3\u00A9ro\ de\ version\ ou\ une\ date)\n\ \n\ \ \ \ \ \ \ \ \ \ Les\ classes-test\ sont\ document\u00C3\u00A9es\ ici\ \:\n\ \ \ \ \ \ \ \ \ \ http\://junit.sourceforge.net/javadoc/junit/framework/TestCase.html\n\ \ \ \ \ \ \ \ \ \ et\ sont\ bas\u00C3\u00A9es\ sur\ le\ document\ \u00C2\u00A9\ 2002\ Robert\ A.\ Ballance\ intitul\u00C3\u00A9\n\ \ \ \ \ \ \ \ \ \ \u00C2\u00ABJUnit\:\ Unit\ Testing\ Framework\u00C2\u00BB.\n\ \n\ \ \ \ \ \ \ \ \ \ Les\ objets\ Test\ (et\ TestSuite)\ sont\ associ\u00C3\u00A9s\ aux\ classes\ \u00C3\u00A0\ tester\n\ \ \ \ \ \ \ \ \ \ par\ la\ simple\ relation\ yyyTest\ (e.g.\ qu'un\ Test\ de\ la\ classe\n\ \ \ \ \ \ \ \ \ \ Name.java\ se\ nommera\ NameTest.java);\ les\ deux\ se\ retrouvent\ dans\ le\n\ \ \ \ \ \ \ \ \ \ m\u00C3\u00AAme\ paquetage.\ Les\ "engagements"\ (anglais\ \:\ "fixture")\ forment\ un\n\ \ \ \ \ \ \ \ \ \ ensemble\ de\ conditions\ qui\ sont\ vraies\ pour\ chaque\ m\u00C3\u00A9thode\ Test\ \u00C3\u00A0\n\ \ \ \ \ \ \ \ \ \ ex\u00C3\u00A9cuter.\ Il\ peut\ y\ avoir\ plus\ d'une\ m\u00C3\u00A9thode\ Test\ dans\ une\ classe\n\ \ \ \ \ \ \ \ \ \ Test;\ leur\ ensemble\ forme\ un\ objet\ TestSuite.\ BlueJ\ d\u00C3\u00A9couvrira\n\ \ \ \ \ \ \ \ \ \ automatiquement\ (par\ introspection)\ les\ m\u00C3\u00A9thodes\ Test\ de\ votre\n\ \ \ \ \ \ \ \ \ \ classe\ Test\ et\ g\u00C3\u00A9n\u00C3\u00A9rera\ la\ TestSuite\ cons\u00C3\u00A9quente.\ Chaque\ appel\ d'une\n\ \ \ \ \ \ \ \ \ \ m\u00C3\u00A9thode\ Test\ sera\ pr\u00C3\u00A9c\u00C3\u00A9d\u00C3\u00A9\ d'un\ appel\ de\ setUp(),\ qui\ r\u00C3\u00A9alise\ les\n\ \ \ \ \ \ \ \ \ \ engagements,\ et\ suivi\ d'un\ appel\ \u00C3\u00A0\ tearDown(),\ qui\ les\ d\u00C3\u00A9truit.\n
comment1.params=
comment1.target=Pile3Test()
comment1.text=\n\ Constructeur\ de\ la\ classe-test\ Pile3Test\n
comment10.params=
comment10.target=void\ test_Pile3_equals()
comment2.params=
comment2.target=void\ setUp()
comment2.text=\n\ Met\ en\ place\ les\ engagements.\n\ \n\ M\u00C3\u00A9thode\ appel\u00C3\u00A9e\ avant\ chaque\ appel\ de\ m\u00C3\u00A9thode\ de\ test.\n
comment3.params=
comment3.target=void\ tearDown()
comment3.text=\n\ Supprime\ les\ engagements\n\ \n\ M\u00C3\u00A9thode\ appel\u00C3\u00A9e\ apr\u00C3\u00A8s\ chaque\ appel\ de\ m\u00C3\u00A9thode\ de\ test.\n
comment4.params=
comment4.target=void\ test_Pile3_capacite()
comment4.text=\n\ Il\ ne\ vous\ reste\ plus\ qu'\u00C3\u00A0\ d\u00C3\u00A9finir\ une\ ou\ plusieurs\ m\u00C3\u00A9thodes\ de\ test.\ Ces\n\ m\u00C3\u00A9thodes\ doivent\ v\u00C3\u00A9rifier\ les\ r\u00C3\u00A9sultats\ attendus\ \u00C3\u00A0\ l'aide\ d'assertions\n\ assertTrue(<boolean>).\ Par\ convention,\ leurs\ noms\ devraient\ d\u00C3\u00A9buter\ par\n\ "test".\ Vous\ pouvez\ \u00C3\u00A9baucher\ le\ corps\ gr\u00C3\u00A2ce\ au\ menu\ contextuel\n\ "Enregistrer\ une\ m\u00C3\u00A9thode\ de\ test".\n
comment5.params=
comment5.target=void\ test_Pile3_estPleine()
comment6.params=
comment6.target=void\ test_Pile3_sommet()
comment7.params=
comment7.target=void\ test_Pile3_estVide()
comment8.params=
comment8.target=void\ test_Pile3_toString()
comment9.params=
comment9.target=void\ test_Pile3_TailleNegative()
numComments=11
